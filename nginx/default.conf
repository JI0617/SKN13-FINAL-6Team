# ---------- http 컨텍스트 ----------
map $http_origin $cors_allow_origin {
    default "";
    "~^https://(www\.)?growing\.ai\.kr$" $http_origin;
}

upstream backend {
    server backend:8000;
}

server {
    listen 80;
    server_name api.growing.ai.kr;

    # 헬스체크
    location = /health {
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }

    location / {
        # ✅ 프리플라이트(OPTIONS)는 Nginx가 직접 응답
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin $cors_allow_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, Accept, Origin" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Vary "Origin" always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        # ✅ 실제 요청은 백엔드(Django)가 CORS 헤더를 넣도록 맡김
        #    (중복 방지를 위해 아래 add_header, proxy_hide_header 전부 제거)

        proxy_pass http://backend;

        # ✅ DisallowedHost 방지: Host를 고정(프론트/헬스체크 모두 동일)
        proxy_set_header Host api.growing.ai.kr;

        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;  # ALB의 proto 유지
        proxy_read_timeout 300;
    }
}
