upstream backend {
    server backend:8000;
}

# 모든 HTTP 요청을 HTTPS로 리다이렉트
server {
    listen 80;
    server_name api.growing.ai.kr;
    return 301 https://$host$request_uri;
}

# HTTPS 서버 블록
server {
    listen 443 ssl;
    server_name api.growing.ai.kr;

    # SSL 인증서 경로 (Let's Encrypt 발급 기준)
    ssl_certificate     /etc/letsencrypt/live/api.growing.ai.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.growing.ai.kr/privkey.pem;

    location /health {
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }

    location / {
        # CORS Preflight 요청 처리
        if ($request_method = OPTIONS) {
            if ($http_origin ~* "^https://(www\.)?growing\.ai\.kr$") {
                add_header Access-Control-Allow-Origin "$http_origin" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, Accept, Origin" always;
                add_header Access-Control-Allow-Credentials "true" always;
            }
            return 204;
        }

        # 백엔드 프록시 연결
        proxy_pass http://backend;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300;

        # 실제 요청에도 CORS 적용
        if ($http_origin ~* "^https://(www\.)?growing\.ai\.kr$") {
            add_header Access-Control-Allow-Origin "$http_origin" always;
            add_header Access-Control-Allow-Credentials "true" always;
        }
    }
}
